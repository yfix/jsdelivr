{"version":3,"file":"json-patch.min.js","sources":["../src/json-patch.js"],"names":["jsonpatch","_equals","a","b","_isArray","length","i","l","bKeys","_objectKeys","bLength","apply","tree","patches","patch","result","p","plen","keys","path","split","obj","t","len","index","parseInt","arrOps","op","call","key","indexOf","replace","objOps","rootOps","Object","o","hasOwnProperty","push","add","this","value","remove","move","temp","from","copy","test","_get","arr","splice","JSON","stringify","Array","isArray","exports"],"mappings":"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","sourcesContent":["/*!\n* json-patch-duplex.js 0.3.10\n* (c) 2013 Joachim Wester\n* MIT license\n*/\nvar jsonpatch;\n(function (jsonpatch) {\n    var _objectKeys = (function () {\n        if (Object.keys)\n            return Object.keys;\n\n        return function (o) {\n            var keys = [];\n            for (var i in o) {\n                if (o.hasOwnProperty(i)) {\n                    keys.push(i);\n                }\n            }\n            return keys;\n        };\n    })();\n\n    function _equals(a, b) {\n        switch (typeof a) {\n            case 'undefined':\n            case 'boolean':\n            case 'string':\n            case 'number':\n                return a === b;\n            case 'object':\n                if (a === null)\n                    return b === null;\n                if (_isArray(a)) {\n                    if (!_isArray(b) || a.length !== b.length)\n                        return false;\n\n                    for (var i = 0, l = a.length; i < l; i++)\n                        if (!_equals(a[i], b[i]))\n                            return false;\n\n                    return true;\n                }\n\n                var bKeys = _objectKeys(b);\n                var bLength = bKeys.length;\n                if (_objectKeys(a).length !== bLength)\n                    return false;\n\n                for (var i = 0; i < bLength; i++)\n                    if (!_equals(a[i], b[i]))\n                        return false;\n\n                return true;\n\n            default:\n                return false;\n        }\n    }\n\n    var objOps = {\n        add: function (obj, key) {\n            obj[key] = this.value;\n            return true;\n        },\n        remove: function (obj, key) {\n            delete obj[key];\n            return true;\n        },\n        replace: function (obj, key) {\n            obj[key] = this.value;\n            return true;\n        },\n        move: function (obj, key, tree) {\n            var temp = { op: \"_get\", path: this.from };\n            apply(tree, [temp]);\n            apply(tree, [\n                { op: \"remove\", path: this.from }\n            ]);\n            apply(tree, [\n                { op: \"add\", path: this.path, value: temp.value }\n            ]);\n            return true;\n        },\n        copy: function (obj, key, tree) {\n            var temp = { op: \"_get\", path: this.from };\n            apply(tree, [temp]);\n            apply(tree, [\n                { op: \"add\", path: this.path, value: temp.value }\n            ]);\n            return true;\n        },\n        test: function (obj, key) {\n            return _equals(obj[key], this.value);\n        },\n        _get: function (obj, key) {\n            this.value = obj[key];\n        }\n    };\n\n    var arrOps = {\n        add: function (arr, i) {\n            arr.splice(i, 0, this.value);\n            return true;\n        },\n        remove: function (arr, i) {\n            arr.splice(i, 1);\n            return true;\n        },\n        replace: function (arr, i) {\n            arr[i] = this.value;\n            return true;\n        },\n        move: objOps.move,\n        copy: objOps.copy,\n        test: objOps.test,\n        _get: objOps._get\n    };\n\n    /* The operations applicable to object root. Many are the same as for the object */\n    var rootOps = {\n        add: function (obj) {\n            for (var key in this.value) {\n                if (this.value.hasOwnProperty(key)) {\n                    obj[key] = this.value[key];\n                }\n            }\n            return true;\n        },\n        remove: function (obj) {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    objOps.remove.call(this, obj, key);\n                }\n            }\n            return true;\n        },\n        replace: function (obj) {\n            apply(obj, [\n                { op: \"remove\", path: this.path }\n            ]);\n            apply(obj, [\n                { op: \"add\", path: this.path, value: this.value }\n            ]);\n            return true;\n        },\n        move: objOps.move,\n        copy: objOps.copy,\n        test: function (obj) {\n            return (JSON.stringify(obj) === JSON.stringify(this.value));\n        },\n        _get: objOps._get\n    };\n\n    var _isArray;\n    if (Array.isArray) {\n        _isArray = Array.isArray;\n    } else {\n        _isArray = function (obj) {\n            return obj.push && typeof obj.length === 'number';\n        };\n    }\n\n    /// Apply a json-patch operation on an object tree\n    function apply(tree, patches) {\n        var result = false, p = 0, plen = patches.length, patch;\n        while (p < plen) {\n            patch = patches[p];\n            p++;\n\n            // Find the object\n            var keys = patch.path.split('/');\n            var obj = tree;\n            var t = 1;\n            var len = keys.length;\n\n            while (true) {\n                if (_isArray(obj)) {\n                    var index = parseInt(keys[t], 10);\n                    t++;\n                    if (t >= len) {\n                        result = arrOps[patch.op].call(patch, obj, index, tree); // Apply patch\n                        break;\n                    }\n                    obj = obj[index];\n                } else {\n                    var key = keys[t];\n                    if (key) {\n                        if (key && key.indexOf('~') != -1)\n                            key = key.replace(/~1/g, '/').replace(/~0/g, '~'); // escape chars\n                        t++;\n                        if (t >= len) {\n                            result = objOps[patch.op].call(patch, obj, key, tree); // Apply patch\n                            break;\n                        }\n                    } else {\n                        t++;\n                        if (t >= len) {\n                            result = rootOps[patch.op].call(patch, obj, key, tree); // Apply patch\n                            break;\n                        }\n                    }\n                    obj = obj[key];\n                }\n            }\n        }\n        return result;\n    }\n    jsonpatch.apply = apply;\n})(jsonpatch || (jsonpatch = {}));\n\nif (typeof exports !== \"undefined\") {\n    exports.apply = jsonpatch.apply;\n}\n//# sourceMappingURL=json-patch.js.map\n"]}